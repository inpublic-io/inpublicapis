// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: twitter/v1/metrics.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A representation of an query for interval aggregated results
type IntervalAggregateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query time range e.g. -1h (will get the last hour of data)
	Range string `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
	// The query aggregation interval e.g. 5m (will get counts of 5 minutes interval aggreated data)
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *IntervalAggregateQuery) Reset() {
	*x = IntervalAggregateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitter_v1_metrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntervalAggregateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntervalAggregateQuery) ProtoMessage() {}

func (x *IntervalAggregateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_twitter_v1_metrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntervalAggregateQuery.ProtoReflect.Descriptor instead.
func (*IntervalAggregateQuery) Descriptor() ([]byte, []int) {
	return file_twitter_v1_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *IntervalAggregateQuery) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *IntervalAggregateQuery) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

// A represention of an contribution metric
type ContributionMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metric slice of timestamps and counts aggregated by the interval window
	Values map[string]int32 `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ContributionMetrics) Reset() {
	*x = ContributionMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitter_v1_metrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContributionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributionMetrics) ProtoMessage() {}

func (x *ContributionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_twitter_v1_metrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributionMetrics.ProtoReflect.Descriptor instead.
func (*ContributionMetrics) Descriptor() ([]byte, []int) {
	return file_twitter_v1_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *ContributionMetrics) GetValues() map[string]int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// A representation of an query for range aggregated results
type RangeAggregateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query time range e.g. -1h (will get the last hour of data)
	Range string `protobuf:"bytes,1,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *RangeAggregateQuery) Reset() {
	*x = RangeAggregateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitter_v1_metrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeAggregateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeAggregateQuery) ProtoMessage() {}

func (x *RangeAggregateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_twitter_v1_metrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeAggregateQuery.ProtoReflect.Descriptor instead.
func (*RangeAggregateQuery) Descriptor() ([]byte, []int) {
	return file_twitter_v1_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *RangeAggregateQuery) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

// A represention of an reach metric
type ReachMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metric slice of followers counts aggregated on a selected time range
	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ReachMetrics) Reset() {
	*x = ReachMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitter_v1_metrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReachMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachMetrics) ProtoMessage() {}

func (x *ReachMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_twitter_v1_metrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachMetrics.ProtoReflect.Descriptor instead.
func (*ReachMetrics) Descriptor() ([]byte, []int) {
	return file_twitter_v1_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *ReachMetrics) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

// A represention of an stats metric
type StatsMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metric on the average of result values
	Average int32 `protobuf:"varint,1,opt,name=average,proto3" json:"average,omitempty"`
	// The metric on total of result values
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// The metric on the sum of all result values
	Sum int32 `protobuf:"varint,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *StatsMetrics) Reset() {
	*x = StatsMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_twitter_v1_metrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatsMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsMetrics) ProtoMessage() {}

func (x *StatsMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_twitter_v1_metrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsMetrics.ProtoReflect.Descriptor instead.
func (*StatsMetrics) Descriptor() ([]byte, []int) {
	return file_twitter_v1_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *StatsMetrics) GetAverage() int32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *StatsMetrics) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StatsMetrics) GetSum() int32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

var File_twitter_v1_metrics_proto protoreflect.FileDescriptor

var file_twitter_v1_metrics_proto_rawDesc = []byte{
	0x0a, 0x18, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x6f, 0x2e, 0x69,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x22, 0x4a, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0xa1,
	0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x4f, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x2b, 0x0a, 0x13, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x26, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x50, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x32, 0xbb, 0x03, 0x0a, 0x07, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x77, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x67,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x66, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x61, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x69,
	0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x69,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12,
	0x66, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x69,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_twitter_v1_metrics_proto_rawDescOnce sync.Once
	file_twitter_v1_metrics_proto_rawDescData = file_twitter_v1_metrics_proto_rawDesc
)

func file_twitter_v1_metrics_proto_rawDescGZIP() []byte {
	file_twitter_v1_metrics_proto_rawDescOnce.Do(func() {
		file_twitter_v1_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_twitter_v1_metrics_proto_rawDescData)
	})
	return file_twitter_v1_metrics_proto_rawDescData
}

var file_twitter_v1_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_twitter_v1_metrics_proto_goTypes = []interface{}{
	(*IntervalAggregateQuery)(nil), // 0: io.inpublic.twitter.v1.IntervalAggregateQuery
	(*ContributionMetrics)(nil),    // 1: io.inpublic.twitter.v1.ContributionMetrics
	(*RangeAggregateQuery)(nil),    // 2: io.inpublic.twitter.v1.RangeAggregateQuery
	(*ReachMetrics)(nil),           // 3: io.inpublic.twitter.v1.ReachMetrics
	(*StatsMetrics)(nil),           // 4: io.inpublic.twitter.v1.StatsMetrics
	nil,                            // 5: io.inpublic.twitter.v1.ContributionMetrics.ValuesEntry
}
var file_twitter_v1_metrics_proto_depIdxs = []int32{
	5, // 0: io.inpublic.twitter.v1.ContributionMetrics.values:type_name -> io.inpublic.twitter.v1.ContributionMetrics.ValuesEntry
	0, // 1: io.inpublic.twitter.v1.Metrics.ContributionsPerInterval:input_type -> io.inpublic.twitter.v1.IntervalAggregateQuery
	2, // 2: io.inpublic.twitter.v1.Metrics.ContributionsStats:input_type -> io.inpublic.twitter.v1.RangeAggregateQuery
	2, // 3: io.inpublic.twitter.v1.Metrics.ContributorsReach:input_type -> io.inpublic.twitter.v1.RangeAggregateQuery
	2, // 4: io.inpublic.twitter.v1.Metrics.ContributorsStats:input_type -> io.inpublic.twitter.v1.RangeAggregateQuery
	1, // 5: io.inpublic.twitter.v1.Metrics.ContributionsPerInterval:output_type -> io.inpublic.twitter.v1.ContributionMetrics
	4, // 6: io.inpublic.twitter.v1.Metrics.ContributionsStats:output_type -> io.inpublic.twitter.v1.StatsMetrics
	3, // 7: io.inpublic.twitter.v1.Metrics.ContributorsReach:output_type -> io.inpublic.twitter.v1.ReachMetrics
	4, // 8: io.inpublic.twitter.v1.Metrics.ContributorsStats:output_type -> io.inpublic.twitter.v1.StatsMetrics
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_twitter_v1_metrics_proto_init() }
func file_twitter_v1_metrics_proto_init() {
	if File_twitter_v1_metrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_twitter_v1_metrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntervalAggregateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twitter_v1_metrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContributionMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twitter_v1_metrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeAggregateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twitter_v1_metrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReachMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_twitter_v1_metrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatsMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_twitter_v1_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_twitter_v1_metrics_proto_goTypes,
		DependencyIndexes: file_twitter_v1_metrics_proto_depIdxs,
		MessageInfos:      file_twitter_v1_metrics_proto_msgTypes,
	}.Build()
	File_twitter_v1_metrics_proto = out.File
	file_twitter_v1_metrics_proto_rawDesc = nil
	file_twitter_v1_metrics_proto_goTypes = nil
	file_twitter_v1_metrics_proto_depIdxs = nil
}
